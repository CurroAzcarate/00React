{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGrigItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGrigItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kOAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAmB5C,OACI,mCAGI,sBAAMC,SAhBO,SAACC,GAClBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAUd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAzBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,eAmC/BZ,EAAYe,UAAU,CAClBd,cAAee,IAAUC,KAAKC,Y,mCC1CrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,sEAETC,EAFS,iDAEsCC,UAAUH,GAFhD,+DAGGI,MAAMF,GAHT,cAGTG,EAHS,gBAIKA,EAAKC,OAJV,uBAIRC,EAJQ,EAIRA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAM,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT3B,kBAcRM,GAdQ,4FAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAMc,UAAU,yCAAhB,UACI,qBAAKC,IAAKf,EAAMgB,IAAKN,IACrB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAGGqB,EDb2BK,CAAa1B,GAAjCa,EAHuB,EAG7BN,KAAca,EAHe,EAGfA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,yCAAd,SAAwDhB,IACvDoB,GAAW,mBAAGJ,UAAU,wCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdxBgB,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAAC,cAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAEA,6BAEI+C,EAAWnB,KAAI,SAACT,GAAD,OAGX,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCdzB6B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.543c6df6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n      \r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n       \r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(cats=>[inputValue,...cats,]);\r\n            setInputValue('')\r\n        }\r\n        \r\n        \r\n        \r\n    }\r\n    return (\r\n        <>\r\n           \r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n\r\n        </>\r\n    )\r\n   \r\n\r\n\r\n\r\n}\r\n\r\nAddCategory.prototype={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category)=>{\r\n    try {\r\n        const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=d1J8gi9ZTcRHlAEn0SONC2bATEnnZWVx`;\r\n        const resp= await fetch(url);\r\n        const {data}= await resp.json();\r\n        const gifs = data.map (img=>{\r\n            return{\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        \r\n\r\n        return gifs;\r\n\r\n      \r\n    } catch (error) {\r\n        \r\n    }\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGrigItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div  className='card animate__animated animate__fadeIn'>\r\n            <img src={url}  alt={title} />\r\n            <p>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","//import React,{useState, useEffect} from 'react'\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGrigItem } from './GifGrigItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='card animate__animated animate__fadeIn'>{category}</h3>\r\n            {loading && <p className='card animate__animated animate__flash'>Loading...</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img => (\r\n                        <GifGrigItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n\r\n    return state; //data:[] , loading: true\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                categories.map((category)=>(\r\n\r\n                    \r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category} />\r\n                ))\r\n                \r\n               \r\n\r\n\r\n            }\r\n\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport { GitExpertApp } from './GitExpertApp';\n\nReactDOM.render(\n\n    <GitExpertApp />,\n    document.getElementById('root')\n    \n);\n\n\n\n\n"],"sourceRoot":""}